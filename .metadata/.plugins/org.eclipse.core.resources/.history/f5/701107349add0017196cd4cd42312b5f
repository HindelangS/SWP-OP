import java.util.ArrayList;
// main: sollte heizwert verändern, davor aber objekte instanzieren zB heizung, 
// hausverwalutung und meister, 
//hausverwalter muss bei heizung mit sich subscribe
public class Heizung implements IHeizObserver{

	private float temp= 21;

	static ArrayList<IBeobachter> beobachterL =  new ArrayList<IBeobachter>(); 

	@Override
	public void aboHinzufuegen(IBeobachter beobachter) {
		this.beobachterL.add(beobachter);
	}
 
	@Override
	public void aboEntfernen(IBeobachter beobachter) {
		this.beobachterL.remove(beobachter);
	}
 
	@Override
	public void notifyAll() {
		for (IBeobachter beobachter : beobachterL) {
			beobachter.update();
		}
	}
	
	
	
	

	public float getHeizWert(){
		System.out.println("Heizwert beträgt: " +temp +" °C");
		return temp;
	}

	public void setHeizWert(float t){
		this.temp = t; 
		System.out.println("Heizwert wird um "+t+" erhöht/vermindert, beträgt nun: "+getHeizWert()+" °C");
		informAll();
	}

	public static void aboHinzufuegen(IHeizObserver obs){
		//arraylist obj hinzufügen
		System.out.println("Subscribe von: "+ obs);
		observ.add(obs);
	}

	public static void aboEntfernen(IHeizObserver obs ){
		//arraylist obj löschen
		System.out.println("Unsubscribe von: "+ obs);
		observ.remove(obs);
	}

	private static void informAll(){
		//geht arraylist durch und führt bei jeder update durch , sobald set temp aufgerufen wurde
		for(int i = 0; i < observ.size() ; i ++){
			observ.get(i).notifyAll();
			System.out.println("Informall wurde ausgeführt!");
		}
	}
	
	public static void main(String[] args) {
		
		Hausverwaltung hv1 = new Hausverwaltung();
		Hausmeister hm1 = new Hausmeister();

		getHeizWert();
		setHeizWert(-20);
		
		subscribe(hv1);
		subscribe(hm1);
		
		hv1.notifyAll();
		hm1.notifyAll();
		
		setHeizWert(5);

		
		
	}

}
